{"version":3,"sources":["components/history.js","apis/taskManager.js","actions/index.js","components/Navigation.js","components/Footer.js","views/Landing.js","components/Input.js","components/AuthForm.js","views/SignUp.js","views/SignIn.js","components/Select.js","components/AddTaskForm.js","components/Modal.js","components/Task.js","components/TasksList.js","views/TaskManager.js","App.js","reducers/authReduc.js","reducers/taskReducer.js","reducers/index.js","index.js"],"names":["createBrowserHistory","axios","create","baseURL","isSignedIn","userData","history","push","type","payload","clearTasks","editTask","id","taskValues","dispatch","getState","a","Authorization","authReduc","token","taskManager","put","headers","response","data","connect","state","user","signOut","localStorage","clear","post","className","to","location","pathname","Fragment","data-toggle","data-target","aria-controls","aria-expanded","aria-label","hasAccess","onClick","Footer","undefined","useEffect","loggedInUser","getItem","JSON","parse","Input","input","placeholder","meta","maxLength","error","touched","renderError","signUp","formValues","submitError","signUpDetails","name","email","password","setItem","stringify","signIn","reduxForm","form","validate","isSingUpPage","errors","match","length","includes","password2","props","submissionError","useRef","formPath","current","classList","add","onSubmit","handleSubmit","htmlFor","Field","component","renderNameField","renderPasswConf","ref","SignUp","SignIn","Select","value","createTask","newTaskDetails","description","completed","userId","category","reset","defaultValue","task","updatedDesc","updatedCateg","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","deleteTask","delete","color","tasks","Object","values","taskReducer","fetchTasks","params","get","getTasks","map","TasksList","App","path","exact","Landing","TaskManager","INITIAL_STATE","action","_","mapKeys","omit","combineReducers","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.b8ad1e29.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\n\nexport default createBrowserHistory();","import axios from 'axios'\n\nexport default axios.create({\n    baseURL:'https://dimitar-task-manager.onrender.com'\n})","import taskManager from '../apis/taskManager'\nimport history from '../components/history'\nimport {reset} from 'redux-form';\n\n\nexport const isSignedIn = userData => {\n    history.push('/user/tasks')\n    return {\n        type: 'IS_SIGNED_IN',\n        payload: userData\n    }\n}\n\nexport const signUp = (formValues, submitError) => async (dispatch) => {\n\n    const signUpDetails = {\n        name: formValues.name,\n        email: formValues.email,\n        password: formValues.password\n    }\n    \n    try {\n        const response = await taskManager.post('/users', signUpDetails)\n        dispatch({type:'SIGN_UP', payload:response.data})\n        localStorage.setItem('user', JSON.stringify(response.data))\n        history.push('/user/tasks')\n    }\n    catch(e) {\n        submitError()\n    }  \n}\n\nexport const signIn = (formValues, submitError) => async dispatch => { \n    try {\n        const response = await taskManager.post('/users/login', formValues)\n        dispatch({type:'SIGN_IN', payload:response.data})\n        localStorage.setItem('user', JSON.stringify(response.data))\n        history.push('/user/tasks')\n    }\n    catch(e) {\n        submitError()\n    }\n}\n\nexport const signOut = () => async (dispatch,getState) => {\n        const Authorization = `Bearer ${getState().authReduc.userData.token}`\n        localStorage.clear();\n        history.push('/')\n        await taskManager.post('/users/logout',{},{\n            headers: {\n                Authorization\n            }\n        })\n        dispatch({type:'SIGN_OUT'})\n    \n}\n\n\nexport const createTask = taskValues => async (dispatch, getState) => {\n\n    const newTaskDetails = {\n        description: taskValues.description,\n        completed: false,\n        userId: getState().authReduc.userData.id,\n        category: taskValues.category\n    }\n\n    const Authorization = `Bearer ${getState().authReduc.userData.token}`\n    const response = await taskManager.post('/tasks',{...newTaskDetails}, {\n        headers: {\n            Authorization\n        }\n    })\n\n    dispatch({type: 'CREATE_TASK', payload: response.data})\n    dispatch(reset('Add Task Form'));\n}\n\nexport const fetchTasks = params => async (dispatch, getState) => {\n    dispatch(clearTasks())\n    const Authorization = `Bearer ${getState().authReduc.userData.token}`\n    const response = await taskManager.get('/tasks',\n    {\n        headers: {\n            Authorization\n        },\n        params\n    })\n    \n    dispatch({type: 'FETCH_TASKS', payload: response.data})\n   \n\n}\n\nexport const clearTasks = () => {\n    return {type: 'CLEAR_TASKS'}\n}\n\n\nexport const editTask = (id, taskValues) => async (dispatch,getState) => {\n    \n    const Authorization = `Bearer ${getState().authReduc.userData.token}`\n    const response = await taskManager.put(`/tasks/${id}`,taskValues,{\n        headers: {\n            Authorization\n        }\n        \n    })\n    \n    dispatch({type: 'EDIT_TASK', payload: response.data})\n}\nexport const deleteTask = id => async (dispatch, getState) => {\n    const Authorization = `Bearer ${getState().authReduc.userData.token}`\n    await taskManager.delete(`/tasks/${id}`,  {\n        headers: {\n            Authorization\n        }\n    })\n\n    dispatch({type: 'DELETE_TASK', payload: id})\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport history from '../components/history'\nimport { signOut} from '../actions'\n\nconst Navigation = ({signOut, user}) => {\n\n\n    const renderLi = () => {\n        \n        if(history.location.pathname === '/') {\n            return  <React.Fragment>\n                    <div className={`px-3`} >Task Manager</div>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        <ul className=\"navbar-nav ml-auto mr-5\">\n                            <li className=\"nav-item px-3\">\n                                <Link to='/signIn' className=\"nav-link text-black\">Sign In</Link>\n                            </li>\n                            <li className=\"nav-item px-3\">\n                                <Link to='/SignUp' className=\"nav-link text-black\">Sign Up</Link>\n                            </li>\n                        </ul>\n                    </div>\n                       \n                    </React.Fragment>\n        }\n        else {\n            if(user.hasAccess) {\n                return  <React.Fragment>\n                            <div className={`px-3 ml-auto`} >Task Manager</div>\n                            <ul className=\"navbar-nav ml-auto\">\n                                <li className=\"nav-item\">\n                                    <span onClick={() => signOut()}className=\"signOut nav-link text-black\">Sign Out</span>\n                                </li>\n                            </ul>\n                        </React.Fragment>\n            }\n        }\n    }\n  \n    return (\n            <div>\n                <nav className=\"navbar navbar-expand-sm navbar-light py-3 font-weight-bold\">\n                    <Link to=\"/\" className=\"navbar-brand px-3\"><i className=\"fas fa-clipboard-list\"></i></Link>\n                    {renderLi()}\n                </nav>\n            </div>\n        \n    )\n}\n\nconst mapStateToProps = state => {\n    return { user : state.authReduc}\n}\n\nexport default connect(mapStateToProps, {signOut})(Navigation)","import React from 'react'\n\nconst Footer = () => {\n    return <footer>\n            <div className=\"text-center py-3\">Created By Dimitar</div>\n           </footer>\n}\n\n\nexport default Footer","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\nimport { isSignedIn } from '../actions'\nimport Navigation from '../components/Navigation'\nimport Footer from '../components/Footer'\n\n\nconst Landing = ({isSignedIn}) => {\n    useEffect( () => {\n        const loggedInUser = localStorage.getItem('user')\n        if(loggedInUser) {\n          isSignedIn(JSON.parse(loggedInUser))\n        }\n    }, [isSignedIn])\n\n    return (\n        <div>\n            <Navigation/>\n            <div className=\"container-fluid bg-light\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-sm-6 py-5 px-5 text-center align-self-center\">\n                        “A good plan today is better than a perfect plan tomorrow.” – Proverb\n                    </div>\n                    <div className=\"col-12 col-sm-6 py-5 text-center\">\n                        <i className=\"fas fa-clipboard-list\"></i>\n                    </div>\n                    \n                </div>\n            </div>\n            <Footer/>\n        </div>\n    )\n\n\n}\n\n\nexport default connect(undefined, {isSignedIn})(Landing)","import React from 'react'\n\n\nconst Input = ({input, type, id, placeholder, meta}) => {\n   const renderError = () => {\n        if(meta.error && meta.touched){\n            return <div className=\"error\">{meta.error}</div>\n        }\n   }\n\n\n    return ( <div>\n                <input {...input} type={type} className=\"form-control\" id={id} placeholder={placeholder} maxLength=\"40\"/>\n                {renderError()}\n             </div>\n            )\n}\n\nexport default Input","import React, {useRef} from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport { connect } from 'react-redux'\nimport { signUp, signIn } from '../actions'\nimport Input from './Input'\nimport history from './history'\n\n\n\nconst AuthForm = props => {\n    const submissionError = useRef(null)\n    const formPath = history.location.pathname === '/SignUp' ? 'Sign Up' : 'Sign In'\n\n    const submitError = () => {\n        submissionError.current.classList.add('visible')\n    }\n    \n    const onSubmit = formValues =>{\n        if(formPath === 'Sign Up'){\n            props.signUp(formValues, submitError)    \n        }\n        else {\n            props.signIn(formValues, submitError)\n        }\n        \n    }\n    const renderPasswConf = () => {\n        if(history.location.pathname === '/SignUp') {\n            return <React.Fragment>\n                     <div className=\"form-group\">\n                        <label htmlFor=\"password2\">Confirm password</label>\n                        <Field name=\"password2\" component={Input} type='password' id='password2' placeholder=\"Enter password again\"/>\n                     </div>\n                     <ul className=\"passwordRules\">\n                        <li>Password must be at least 8 characters long</li>\n                        <li>Password must contain at least 1 capital letter</li>\n                        <li>Passowrd must contain at least 1 lower case letter</li>\n                        <li>Password must contain at least 1 number</li>\n                        <li>Password must contain at least 1 special character e.g. #!%</li>\n                     </ul>\n\n                   </React.Fragment>\n        }\n    }\n    const renderNameField = () => {\n        if(history.location.pathname === '/SignUp') {\n            return <div className=\"form-group\">\n                        <label htmlFor=\"name\">Name</label>\n                        <Field name=\"name\" component={Input} type='text' id='name' placeholder=\"Enter your name\"/>\n                   </div>\n\n        }\n    }\n\n    \n    return <div>\n                <div className=\"text-center my-3\"><i className=\"fas fa-clipboard-list p-2 display-4\"></i>{formPath}</div>\n                \n                <form onSubmit={props.handleSubmit(onSubmit)} className=\"auth p-5 my-2\">\n                    {renderNameField()}     \n                    <div className=\"form-group\">\n                        <label htmlFor=\"inputEmail\">Email address</label>\n                        <Field name=\"email\" component={Input} type='email' id='inputEmail' placeholder=\"Enter email\"/>\n                        \n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <Field name=\"password\" component={Input} type='password' id='password' placeholder=\"Password\"/>\n                    </div>\n                    {renderPasswConf()}\n                    <div ref={submissionError} className=\"submissionError\">{formPath === 'Sign Up'? \"Email already in use\" : \"Incorrect login details\"}</div>\n                    <button type=\"submit\" className=\"btn btn-success\">{formPath}</button>\n                    \n                </form>\n            </div>\n}\n\n\n\nconst validate = (formValues) => {\n    const isSingUpPage = history.location.pathname === '/SignUp' ? true : false\n    const errors = {}\n    \n    if (!formValues.email) {\n        errors.email = 'Please enter your email'\n    }\n\n    if(!formValues.password){\n        errors.password = 'Please enter a password'\n    }\n\n    \n    \n    if(isSingUpPage) {\n        if (!formValues.name) {\n            errors.name = 'Please enter your name'\n        }\n        if(formValues.password) {\n            if (!formValues.password.match(/[a-z]/g)) {\n                    errors.password = 'Password must include at least 1 lowercase character'\n                }\n            if (!formValues.password.match(\n                /[A-Z]/g)){\n                    errors.password = 'Password must include at least 1 uppercase character'\n                }\n            if (!formValues.password.match(\n                /[0-9]/g)){\n                    errors.password = 'Password must include at least 1 number'\n                }\n    \n            if (!formValues.password.match(\n                    /[!@#$%^&*(),.?\":{}|<>]/g)){\n                        errors.password = 'Password must include at least 1 special character'\n                }   \n            \n            if (formValues.password.length < 8){\n                errors.password = 'Password must be at least 8 charactesrs long'\n            }\n\n            if(formValues.password.includes(' ')){\n                errors.password = 'Password contains empty spaces'\n            }\n\n        }\n\n        if(formValues.password && formValues.password2){\n            if(formValues.password !== formValues.password2){\n                errors.password2 = 'Passwords do not match'\n            }    \n        }\n            \n    }\n   \n\n    return errors;\n}\n\nexport default connect(null, {signUp, signIn})(reduxForm({\n    form: `Credentials form`,\n    validate})\n(AuthForm))","import React from 'react'\nimport AuthForm from '../components/AuthForm'\n\nconst SignUp = () => {\n    return (\n        <AuthForm/>\n    )\n}\n\n\nexport default SignUp\n","import React from 'react'\nimport AuthForm from '../components/AuthForm'\n\nconst SignIn = () => {\n    return (\n        <AuthForm/>\n    )\n}\n\n\nexport default SignIn","import React from 'react'\n\n\n\nconst Select = ({input, id, name, meta}) => {\n    const renderError = () => {\n        if(meta.error && meta.touched){\n            return <div className=\"error\">{meta.error}</div>\n        }\n    }\n    return ( <div>\n                <select {...input} className=\"form-control\" id={id} name={name} >\n                    <option value=\"\">-Pick Option-</option>\n                    <option value=\"normal\">Normal</option>\n                    <option value=\"important\">Important</option>\n                    <option value=\"critical\">Critical</option>\n                </select>\n                {renderError()}\n             </div>\n            )\n}\n\nexport default Select","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Field, reduxForm } from 'redux-form'\nimport Input from './Input'\nimport Select from './Select'\nimport {createTask} from '../actions/index'\n\nconst AddTaskForm = ({createTask, handleSubmit}) => {\n    const onSubmit = formValues =>  createTask(formValues)\n   \n\n    return ( <div>\n                <div className=\"text-success\">Add a new task</div>\n                <form onSubmit={handleSubmit(onSubmit)} className=\" addTask p-3 my-2\">  \n                    <div className=\"form-group\">\n                        <label htmlFor=\"description\">Task Description</label>\n                        <Field name=\"description\" component={Input} type='description' id='description' placeholder=\"Enter task description\"/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"category\">Task category</label>\n                        <Field name=\"category\" defaultValue='normal' component={Select} type='category' id='category'/>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-success\">Add</button>   \n                </form>\n\n            </div>\n    )\n\n\n}\n\nconst validate = formValues => {\n    const errors = {}\n    \n    if (!formValues.description) {\n        errors.description = 'Please enter task description'\n    }\n    if (!formValues.category) {\n        errors.category = 'Please choose a task category'\n    }\n    return errors\n}\n\n\n\nexport default connect(null, {createTask})(reduxForm({\n    form: 'Add Task Form',\n    validate\n})(AddTaskForm))","import React, {useRef} from 'react'\nimport { connect } from 'react-redux'\nimport { editTask } from '../actions'\n\n\nconst Modal = ({editTask, task}) => {\n    const updatedDesc = useRef(null)\n    const updatedCateg = useRef(null)\n\n    return <div className=\"modal fade\" id={`t${task.id}`} tabIndex=\"-1\" role=\"dialog\" aria-labelledby={`${task.id}abel`} aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                    <h5 className=\"modal-title\" id={`${task.id}abel`}>Edit Task</h5>\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <label className=\"m-1\"htmlFor=\"description\">Description:</label>\n                        <input className=\"form-control\" ref={updatedDesc} defaultValue={task.description} id=\"description\" type=\"text\" maxLength=\"40\"/>\n                        <label className=\"m-1\"htmlFor=\"category\">Category:</label>\n                        <select className=\"form-control m-1\" ref={updatedCateg} defaultValue={task.category}  id=\"category\">\n                            <option value=\"normal\">Normal</option>\n                            <option value=\"important\">Important</option>\n                            <option value=\"critical\">Critical</option>\n                        </select>    \n                    </div>\n                    <div className=\"modal-footer\">\n                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                    <button data-dismiss=\"modal\" onClick={() => editTask(task.id, {...task, description: updatedDesc.current.value, category: updatedCateg.current.value})} type=\"button\" className=\"btn btn-success\">Save changes</button>\n                    </div>\n                </div>\n                </div>\n           </div>\n}\n\nexport default connect(null , {editTask})(Modal)","import React from 'react'\nimport { connect } from 'react-redux'\nimport Modal from './Modal'\nimport { deleteTask, editTask } from '../actions'\n\nconst Task = ({task, deleteTask, editTask}) => {\n    const color = task.category\n    \n    \n    if(task.completed) {\n        return <div  className={`task ${color} my-2`}>\n                    <div className=\"taskIcons d-flex justify-content-end p-1\">\n                        <i onClick={() => editTask(task.id, {...task, completed: false})}className=\"fas fa-redo mr-2\"></i>\n                    </div>\n                    <div><del>{task.description}</del></div>\n               </div>    \n        }\n    else {\n        return <div  className={`task ${color} my-2`}>\n                    <div className=\"taskIcons d-flex justify-content-end p-1\">\n                        <i data-toggle=\"modal\" data-target={`#t${task.id}`} className=\"fas fa-edit mr-4\"></i>\n                        <i onClick={() => editTask(task.id, {...task, completed: true})} className=\"fas fa-check mr-4\"></i>\n                        <i onClick={() => deleteTask(task.id)} className=\"fas fa-trash-alt mr-2\"></i>\n                    </div>\n                    <div>{task.description}</div>\n                    <Modal task={task}/>\n                </div>\n    }\n\n\n    \n}\n\nexport default connect(null, { deleteTask, editTask })(Task)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\nimport { fetchTasks } from '../actions'\nimport Task from '../components/Task'\n\n\n\n\nconst TasksLists = ({fetchTasks, tasks}) => {\n\n\n    useEffect( () => {\n        const getTasks = async () => {\n            await fetchTasks()\n        }\n        getTasks()\n        \n    }, [fetchTasks])\n\n    const renderedTasks = () =>  tasks.map( task => <Task key={task.id} task={task}/>)\n    \n\n\n    return <div>\n             <div className=\"text-success\">Task List</div>\n             <div className=\"p-3 my-2 taskList\">  \n                {renderedTasks()}\n             </div>\n\n           </div>\n}\n\nconst mapStateToProps = state => {\n    return { tasks: Object.values(state.taskReducer)}\n}\n\nexport default connect(mapStateToProps,{fetchTasks})(TasksLists)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { isSignedIn } from '../actions'\nimport Navigation from '../components/Navigation'\nimport Footer from '../components/Footer'\nimport AddTaskForm from '../components/AddTaskForm'\nimport TasksList from '../components/TasksList'\n\n\n\nconst TaskManager = ({user, isSignedIn}) => {\n\n    useEffect( () => {\n        const loggedInUser = localStorage.getItem('user')\n        if(loggedInUser) {\n          isSignedIn(JSON.parse(loggedInUser))\n        }\n    }, [isSignedIn])\n\n\n    if(!user.hasAccess)\n        return <div>\n                  <div className=\"container p-5\">\n                      <div>Please sign in or sign up first</div>\n                      <Link className=\"btn btn-success m-2\" to=\"/signIn\">Sign In</Link>\n                      <Link className=\"btn btn-success\" to=\"/signUp\">Sign Up</Link>\n                  </div>\n               </div>\n    else {  \n        return <div>\n                    \n                    <Navigation/>\n                    <div className=\"container-fluid bg-light\">\n                        <div className=\"text-center font-weight-bold text-success py-3\">{`Hi ${user.userData.name}, welcome to your task manager`}</div>\n                        <div className=\"row\">\n                            <div className=\"col-12 col-sm-6 py-5 px-5 text-center align-self-top\">\n                                <AddTaskForm/>\n                            </div>\n                            <div className=\"col-12 col-sm-6 py-5 text-center\">\n                                <TasksList/>\n                            </div>\n                            \n                        </div>\n                    </div>\n                \n                    <Footer/>\n           </div>\n    }\n\n    \n}\n\nconst mapStateToProps = state => {\n    return { user : state.authReduc}\n}\n \nexport default connect(mapStateToProps , {isSignedIn})(TaskManager)","import React from 'react'\nimport {Router, Route } from 'react-router-dom'\nimport history from './components/history'\nimport Landing from './views/Landing'\nimport SignUp from './views/SignUp'\nimport SignIn from './views/SignIn'\nimport TaskManager from './views/TaskManager'\nimport './components/Styles.css'\n\n\n\nconst App = () => {\n    return (\n        <Router history={history}>\n                <Route path='/' exact component={Landing}/>\n                <Route path='/signUp' exact component={SignUp}/>\n                <Route path='/signIn' exact component={SignIn}/>\n                <Route path='/user/tasks' exact component={TaskManager}/>\n        </Router>\n    )\n}\n\nexport default App","const INITIAL_STATE = {\n    hasAccess: null,\n    userData: null\n}\n\n\nconst authReduc = (state=INITIAL_STATE, action) => {\n    switch(action.type) {\n       case 'IS_SIGNED_IN':\n            return {...state, hasAccess: true, userData: action.payload}\n       case 'SIGN_IN':\n            return {...state, hasAccess: true, userData: action.payload}\n       case 'SIGN_UP':  \n            return {...state, hasAccess: true, userData: action.payload}\n       case 'SIGN_OUT':\n            return {...state, hasAccess: null, userData: null}\n       default:\n            return {...state}\n        }\n}\n\n  \n\n\nexport default authReduc","import _ from 'lodash';\n\nconst taskReducer = (state = {}, action) => {\n    switch(action.type) {\n        case 'FETCH_TASKS':\n            return { ...state, ..._.mapKeys(action.payload, 'id')}\n        case 'CREATE_TASK':\n            return { ...state, [action.payload.id]: action.payload}\n        case 'CLEAR_TASKS':{\n            return {...{}}\n        }\n        case 'EDIT_TASK':\n            return { ...state, [action.payload.id]: action.payload}\n        case 'DELETE_TASK':\n            return _.omit(state\n            , action.payload)\n        default:\n            return state\n    }\n}\n\nexport default taskReducer","import { combineReducers } from 'redux'\nimport { reducer as formReducer } from 'redux-form'\nimport  authReduc from './authReduc'\nimport  taskReducer from './taskReducer'\n\n\nexport default combineReducers({\n    form: formReducer,\n    authReduc : authReduc,\n    taskReducer : taskReducer\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport {Provider} from 'react-redux'\nimport { createStore, compose, applyMiddleware } from 'redux'\nimport reduxThunk from 'redux-thunk'\nimport reducers from './reducers/'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(reduxThunk)));\n\nReactDOM.render(    \n    <Provider store={store}>\n    <App/>\n    </Provider>,\n    document.querySelector('#root')\n)"],"sourceRoot":""}